# Universal Importer extension for SketchUp 2017 or newer.
# Copyright: © 2025 Samuel Tallet <samuel.tallet at gmail dot com>
# 
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3.0 of the License, or (at your option) any later version.
# 
# If you release a modified version of this program TO THE PUBLIC, the GPL requires you to MAKE THE MODIFIED SOURCE CODE
# AVAILABLE to the program's users, UNDER THE GPL.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
# Get a copy of the GPL here: https://www.gnu.org/licenses/gpl.html

require 'sketchup'
require 'universal_importer/import'
require 'universal_importer/orientation'
require 'universal_importer/units'
require 'universal_importer/collada'
require 'universal_importer/poly_reduction'

# Universal Importer plugin namespace.
module UniversalImporter

  # Observes SketchUp (SU) model events and reacts...
  class ModelObserver < Sketchup::ModelObserver

    # When a component is “placed” into the SU model:
    def onPlaceComponent(component)

      if !Import.last.nil? && Import.last.processed && !Import.last.completed
        Import.last.delete_temp_files

        component.definition.name = Import.last.source_filename

        # @todo Provide a visual interface so the user can preview
        # (and fix if needed) the orientation of model to import.
        Orientation.rotate(component, X_AXIS, -90.degrees) \
          if Import.last.source_importer == :mayo_conv || Import.last.source_file_ext == '3mf'

        # We are forced to change the units once the component is placed into the SU model due to a bug.
        # @see https://forums.sketchup.com/t/importing-mesh-from-file-ignoring-small-faces/23094/3
        # The user first sees the component at a wrong scale before the scaling transformation is applied,
        # but at least there are no lost faces in the imported model.
        Units.change(component, Import.last.source_units.to_sym) \
          if Import.last.source_units != 'm'
          # Whatever the source units, the final DAE file generated by Assimp,
          # then imported here as a component instance, is already in meters.

        COLLADA.fix_materials_names(Import.last.materials_names)

        # Avoid the alteration of components placed after this import.
        Import.last.completed = true
      end

      if !PolyReduction.last.nil? && PolyReduction.last.completed
        PolyReduction.last.delete_temp_dir

        COLLADA.fix_materials_names(PolyReduction.last.materials_names)
        PolyReduction.last.show_face_count_summary

        PolyReduction.last = nil
      end

    end

  end

end
